version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/draft-annotations-api
    docker:
      - image: golang:1
        environment:
          GOPATH: /go
          CIRCLE_TEST_REPORTS: /tmp/test-results
          CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
    steps:
      - checkout
      - run:
          name: External Dependencies
          command: |
           GO111MODULE=off go get -u github.com/mattn/goveralls
           GO111MODULE=off go get -u github.com/jstemmer/go-junit-report
           curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.18.0
           wget https://raw.githubusercontent.com/Financial-Times/upp-coding-standard/v1.0.0/golangci-config/.golangci.yml
      - run:
          name: Test Results
          command: |
            mkdir -p ${CIRCLE_TEST_REPORTS}
            mkdir -p ${CIRCLE_COVERAGE_REPORT}
      - run:
          name: Go Build
          command: go build -mod=readonly -v
      - run:
          name: Run linters
          command: golangci-lint run --new-from-rev=master --config .golangci.yml
      - run:
          name: Run Tests
          command: |
            go test -mod=readonly -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
      - run:
          name: Upload Coverage
          command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
      - store_test_results:
          path: /tmp/test-results
  dockerfile:
    working_directory: /draft-content-api
    docker:
      - image: docker:18
    steps:
      - checkout
      - setup_docker_engine
      - run:
          name: Build Dockerfile
          command: docker build .
  dredd:
    working_directory: /go/src/github.com/Financial-Times/draft-annotations-api
    docker:
      - image: golang:1
        environment:
          GOPATH: /go
          API_YML: /go/src/github.com/Financial-Times/draft-annotations-api/_ft/api.yml
          ANNOTATIONS_RW_ENDPOINT: http://localhost:9000
          ANNOTATIONS_ENDPOINT: http://localhost:9000/content/%v/annotations
          INTERNAL_CONCORDANCES_ENDPOINT: http://localhost:9000/internalconcordances
      - image: peteclarkft/ersatz:stable
    steps:
      - checkout
      - run:
          name: Go Build
          command: go build -mod=readonly -v
      - run:
          name: Load ersatz-fixtures.yml to ersatz image
          command: "curl -X POST --data-binary @_ft/ersatz-fixtures.yml -H \"Content-type: text/x-yaml\" http://localhost:9000/__configure"
      - run:
          name: Download dredd
          command: |
            curl -sL https://deb.nodesource.com/setup_11.x | bash -
            DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs=11.\*
            npm install -g --unsafe-perm --loglevel warn --user 0 --no-progress dredd@8.0.0
            rm -rf /var/lib/apt/lists/*
      - run:
          name: Dredd API Testing
          command: dredd
workflows:
  version: 2
  test-and-build-docker:
    jobs:
      - build
      - dredd
      - dockerfile:
          requires:
            - build
