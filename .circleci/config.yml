version: 2.1
orbs:
  ft-golang-ci: financial-times/golang-ci@1

executors:
  default-with-opa:
    working_directory: /go/src/github.com/Financial-Times/draft-annotations-api
    docker:
      - image: golang:1
        environment:
          GOPATH: /go
          API_YML: /go/src/github.com/Financial-Times/draft-annotations-api/_ft/api.yml
          ANNOTATIONS_RW_ENDPOINT: http://localhost:9000
          ANNOTATIONS_ENDPOINT: http://localhost:9000/content/%v/annotations
          INTERNAL_CONCORDANCES_ENDPOINT: http://localhost:9000/internalconcordances
          JSON_SCHEMAS_PATH: ./schemas
          JSON_SCHEMA_NAME: draft-annotations-pac-add.json;draft-annotations-pac-replace.json;draft-annotations-pac-write.json;draft-annotations-sv-add.json;draft-annotations-sv-replace.json;draft-annotations-sv-write.json;draft-annotations-ftpc-add.json;draft-annotations-ftpc-replace.json;draft-annotations-ftpc-write.json;draft-annotations-fta-add.json;draft-annotations-fta-replace.json;draft-annotations-fta-write.json
          JSON_SCHEMAS_API_CONFIG_PATH: ./config/schemas-api-config.json
          OPA_ADDRESS: "http://localhost:8181"

      - image: peteclarkft/ersatz:stable
      - image: openpolicyagent/opa:0.62.1
        command: [ "run", "--server", "--addr=0.0.0.0:8181", "--log-level=error", "--log-format=json" ]



jobs:
  dredd:
    executor: default-with-opa
    steps:
      - checkout
      - run:
          name: Load ersatz-fixtures.yml to ersatz image
          command: "curl -X POST --data-binary @_ft/ersatz-fixtures.yml -H \"Content-type: text/x-yaml\" http://localhost:9000/__configure"
      - run:
          name: Go Build
          command: >
            #!/bin/bash

            git config --global --unset url."ssh://git@github.com".insteadOf

            export GOPRIVATE="github.com/Financial-Times"

            git config --global
            url."https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com".insteadOf
            "https://github.com"

            go mod download

            go build -v
      - run:
          name: Download dredd
          command: |
            curl -sL https://deb.nodesource.com/setup_14.x | bash -
            DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs=14.\*
            npm install -g --unsafe-perm --loglevel warn --user 0 --no-progress dredd@8.0.0
            rm -rf /var/lib/apt/lists/*
      - run:
          name: Add a dummy OPA policy.
          command: |
            curl -X PUT http://localhost:8181/v1/policies/read -H 'Content-Type: text/plain' --data-raw 'package draft_annotations_api.read is_authorized {true}'
            curl -X PUT http://localhost:8181/v1/policies/write -H 'Content-Type: text/plain' --data-raw 'package draft_annotations_api.write is_authorized {true}'
      - run:
          name: Dredd API Testing
          command: dredd
workflows:
  test-and-build-docker:
    jobs:
      - ft-golang-ci/build-and-test:
          name: build-and-test-project
          context: cm-team-github
      - dredd:
          context: cm-team-github
      - ft-golang-ci/docker-build:
          name: build-docker-image
          requires:
            - build-and-test-project
          context: cm-team-github
  snyk-scanning:
    jobs:
      - ft-golang-ci/scan:
          name: scan-dependencies
          context:
            - cm-team-snyk
            - cm-team-github
